#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# INITIALIZE AND STORE SETTINGS
#=================================================

admin_email="$(ynh_user_get_info "$admin" mail)"
ynh_app_setting_set --app="$app" --key=admin_email --value="$admin_email"

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app="$app" --key=redis_db --value="$redis_db"

#-------------------------------------------------
# config_panel.toml settings:

debug_enabled="0"
ynh_app_setting_set --app="$app" --key=debug_enabled --value="$debug_enabled"
log_level="WARNING"
ynh_app_setting_set --app="$app" --key=log_level --value="$log_level"
default_from_email="${app}@${domain}"
ynh_app_setting_set --app="$app" --key=default_from_email --value="$default_from_email"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

mkdir -p "$install_dir/"{app,public/media,public/static}

ynh_add_config --template="requirements.txt" --destination="$install_dir/app/requirements.txt"

ynh_add_config --template="gunicorn.conf.py" --destination="$install_dir/app/gunicorn.conf.py"

ynh_add_config --template="manage.py" --destination="$install_dir/app/manage.py"
chmod +x "$install_dir/app/manage.py"

ynh_add_config --template="settings.py" --destination="$install_dir/app/settings.py"
ynh_add_config --template="setup_user.py" --destination="$install_dir/app/setup_user.py"
ynh_add_config --template="urls.py" --destination="$install_dir/app/urls.py"
ynh_add_config --template="wsgi.py" --destination="$install_dir/app/wsgi.py"

touch "$install_dir/app/local_settings.py"

chown -R "$app:www-data" "$install_dir"

mkdir -p "/var/log/$app"
touch "/var/log/$app/$app.log"
chown -R "$app:$app" "/var/log/$app"

#=================================================
# PYTHON VIRTUALENV
#=================================================
ynh_script_progression --message="Installing $app..." --weight=10

_venv_install

_build_app

pushd "$install_dir/app"
    # Just for debugging:
    ynh_exec_as "$app" "$venvpy" ./manage.py diffsettings

    ynh_exec_as "$app" "$venvpy" ./manage.py migrate --no-input
    ynh_exec_as "$app" "$venvpy" ./manage.py collectstatic --no-input

    # Create/update Django superuser (set unusable password, because auth done via SSOwat):
    ynh_exec_as "$app" "$venvpy" ./manage.py create_superuser --username="$admin" --email="$(ynh_user_get_info "$admin" mail)"

    # Check the configuration
    # This may fail in some cases with errors, etc., but the app works and the user can fix issues later.
    ynh_exec_as "$app" "$venvpy" ./manage.py check --deploy || true
popd

#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression --message="Adding system configurations related to $app..." --weight=1

# Create a dedicated NGINX config using the conf/nginx.conf template
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config
yunohost service add "$app" --description="Django-fritzconnection server" --log="/var/log/$app/$app.log"

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate "$log_file"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
